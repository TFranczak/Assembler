//KC03I36A JOB ,'Tommy Franczak',MSGCLASS=H
//STEP1 EXEC PGM=ASSIST
//STEPLIB DD DSN=KC02293.ASSIST.LOADLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
********************************************
* Assignment 6 - Pair Programmed
* Names: Tommy Franczak, Matt Rycraft
*
* Function: 
* 
* MAIN
* Register Usage
*
*  1     Parameter List
* 12     Base register
* 13     Main save
* 14     Return Address
********************************************
MAIN     CSECT
         STM   14,12,12(13)       Copy registers
         LR    12,15              Load 12 as base register
         USING MAIN,12            Use 12 as base register
         LA    14,MAINSAVE        Load MAINSAVE into R14
         ST    13,4(,14)          Link forward pointer
         ST    14,8(,13)          Link backward pointer
         LR    13,14              Load MAINSAVE
         SPACE
         LA    1,PLIST            Load PLIST into 1
         L     15,=V(BUILD)       Load virtual address of BUILD
         BALR  14,15              Do BUILD subroutine
         SPACE
         LA    1,PLIST            Load PLIST into 1
         L     15,=V(PRINT)       Load virtual address of PRINT
         BALR  14,15              Do PRINT subroutine
         SPACE
         LA    1,PLIST            Load PLIST into R1
         L     15,=V(TRANS)       Load virtual address of TRANS
         BALR  14,15              Do TRANS subroutine
         SPACE
         L     13,4(0,13)         Load backward pointer
         LM    14,12,12(13)       Load registers back
         BR    14
         LTORG                    Literal origin
         ORG MAIN+((*-MAIN+31)/32)*32
TABLE    DS    40CL32             Declare Entry Table
EOT      DS    F                  Declare End of Table
CAPTION  DC    C'1'               Caption for PRINT - 80
         DC    22C' '
         DC    CL27'Odds and Ends Customer Data'
         DC    22C' '
         DC    CL4'Page'
         DC    4C' '              Space for num, 76
PAGENUM  DC    PL2'1'             Declares pagenum
BUFFER   DS    80C                Declare Buffer
         DC    C'*'               End for XDECI
PLIST    DC    A(TABLE)           Parameter list
         DC    A(EOT)
         DC    A(BUFFER)
         DC    A(CAPTION)
         DC    A(PAGENUM)
MAINSAVE DS    18F
ENTRY    DSECT                    Dummy section for table
FNAME    DS    CL10               First name = 10 characters
LNAME    DS    CL10               Last name = 10 characters
IDNUM    DS    CL8                ID Number = 8 characters
ACCBAL   DS    PL4                Account Bal = 4 packed nums
********************************************
* Build Subroutine
*
* Function: Reads in numbers from an 
* unknown file and builds a table of  
* 40 fullwords. Firstname(10 characters),
* Lastname(10 characters), ID Num (8 characters)
* Account Balance (4 Characters)
* 
* Register Usage
*
*  4     Table Pointer
*  5     EOT Pointer
*  8     Address of Outline variables
*  9     Address of buffer
* 12     Base register
* 13     Address of BUILDSV (save area)
* 14     Return Address
********************************************
BUILD    CSECT       
         STM   14,12,12(13)       Save registers
         LR    12,15              Load 12 as Base Register
         USING BUILD,12           Use 12 as Base Register 
         LA    14,BUILDSV         Load PRINTSV into 14
         ST    14,8(0,14)         Link backward pointer
         ST    13,4(0,14)         Link forward pointer
         LR    13,14              Load BUILDSV
         USING ENTRY,4
         LM    4,5,0(1)           Unload parameters
         L     9,8(1)             Load address of buffer
BLOOP1   XREAD 0(0,9),80          Read line into buffer
         CLC   0(8,9),=CL8'DONOTPUT' At delimiter?
         BE    ENDBLP1            End loop
         MVC   LNAME(10),0(9)     Grab LNAME from buffer
         MVC   FNAME(10),12(9)    Grab FNAME from buffer
         MVC   IDNUM(8),24(9)     Grab IDNAME from buffer
         PACK  ACCBAL(4),34(7,9)  Grab ACCBAL from buffer
         CLC   41(1,9),=C'+'      + number on line?
         BE    POS                Go to pos
         MP    ACCBAL,=P'-1'      Negate number in table
POS      LA    4,32(0,4)          Increment table pointer
         B     BLOOP1             Back to BLOOP1
ENDBLP1  ST    4,0(5)             Store end of table
         L     13,4(0,13)         Load register list
         LM    14,12,12(13)       Reload registers
         BR    14                 Branch back to MAIN
         LTORG
BUILDSV  DS    18F                Subroutine save
         SPACE
         SPACE
         SPACE
********************************************
* Print Subroutine
*
* Function: Print the table.
* 
* Register Usage
*
*  1     Address of $
*  4     Table Pointer
*  5     EOT Pointer
*  6     Address of pagenum
*  7     Address of CAPTION
*  9     Counter variable
* 12     Base register
* 13     Address of PRINTSV (save area)  
* 14     Return Address
********************************************
PRINT    CSECT 
         STM   14,12,12(13)       Save registers
         LR    12,15              Load 12 as Base Register
         USING PRINT,12           Use 12 as Base Register 
         LA    14,PRINTSV         Load PRINTSV into 14
         ST    14,8(0,14)         Link backward pointer
         ST    13,4(0,14)         Link forward pointer
         LR    13,14              Load SEARCHSV
         USING ENTRY,4            Load DSECT
         LM    4,7,0(1)           Unload parameters
         LA    6,16(1)            Unload pagenum
*PLOOP1   MVC   76(4,7),=X'40202120' Set pattern
*         ED    76(4,7),0(6)       Append proper page num
PLOOP1   XPRNT 0(7),80            Print CAPTION line
         XPRNT HEADER,76          Print HEADER line
         SR    9,9                Zero loop counter
*
PLOOP2   MVI   LINE+1,C' '        Clear LINE
         MVC   LINE+1(78),LINE+1  Clear LINE
         C     4,0(0,5)           EOT = Table Ptr?
         BE    ENDPLOOP           Go to ENDPLOOP
         MVC   FNAME1(10),FNAME   Put FNAME on line
         MVC   LNAME1(10),LNAME   Put LNAME on line
         MVC   IDNUM1(8),IDNUM    Put IDNUM on line
         LA    1,ACCBAL1+4        Set default place for $
         CP    ACCBAL,=P'0'       Is bal >= 0?
         BC    B'1010',BALPOS     Skip to BALPOS
         MVC   ACCBAL1(12),=X'4020202021204B202040C3D9'
         B     ENDN               Merge back with pos
BALPOS   MVC   ACCBAL1(12),=X'4020202021204B2020404040'
ENDN     EDMK  ACCBAL1(12),ACCBAL Put ACCBAL on line
         MVI   0(1),C'$'          Add $ to line
         XPRNT LINE,79            Print the line
         A     4,=F'32'           Increment table pointer
         A     9,=F'1'            Increment Loop counter
         C     9,=F'5'            5 not printed?
         BNE   PLOOP2             Print another
         XPRNT EMPTYLN,1          Adds 3 blank lines
         XPRNT EMPTYLN,1
         XPRNT EMPTYLN,1
*        AP    0(2,6),=P'1'       Increment page counter
         B     PLOOP1             Reprint header.
*
ENDPLOOP L     13,4(0,13)         Load register list
         LM    14,12,12(13)       Reload registers
         BR    14                 Branch back to MAIN
         LTORG
HEADER   DC    C'-'               Format for header line - 76
         DC    C'First Name'
         DC    11C' '
         DC    C'Last Name'
         DC    13C' '
         DC    C'ID Number'
         DC    16C' '
         DC    C'Balance'
LINE     DC    C'0'               Declare print line - 79
FNAME1   DS    10C
         DC    11C' '
LNAME1   DS    10C
         DC    12C' '         
IDNUM1   DS    8C
         DC    15C' '
ACCBAL1  DS    12C
EMPTYLN  DC    C' '               Blank line for printing
PRINTSV  DS    18F                Create register save area
         SPACE
         SPACE
         SPACE
********************************************
* Trans Subroutine
*
* Function: Check To see if client ID from
* buffer is found in table. Then checks what
* type of transaction was done and edits table
* with new information after the transaction
*
* Register Usage
*
*  4     Table address
*  5     EOT Pointer
*  6     Buffer
*  7     Pagenum
*  8     Table pointer
*  9     Counter variable
* 12     Base register
* 13     Address of PRINTSV (save area)  
* 14     Return Address
********************************************
TRANS    CSECT       
         STM   14,12,12(13)       Save registers
         LR    12,15              Load 12 as Base Register
         USING TRANS,12           Use 12 as Base Register 
         LA    14,TRANSV          Load PRINTSV into 14
         ST    14,8(0,14)         Link backward pointer
         ST    13,4(0,14)         Link forward pointer
         LR    13,14              Load BUILDSV
         USING ENTRY,4            Loads DSECT
         LM    4,6,0(1)           Unload parameters
         L     7,16(1)            Load address of pagenum
*
TLOOP    XREAD 0(6),80            Read into buffer
         BC    B'0100',ENDTLOOP   EoT? quit.
         LR    8,4                Load table address
*
TBLCHCK  CLC   0(8,6),20(8)        ID in table?
         BE    INTABLE            Go to INTABLE
         LA    8,32(0,8)          Increment pointer
         CR    8,5                At end of table?
         BE    NINTABLE           Go to NINTABLE
         B     TBLCHCK            Check next element
*
INTABLE  MVI   FOUND+1,C' '       Clear FOUND line
         MVC   FOUND+1(79),FOUND+1
         MVC   FOUND+4(8),20(8)   Put Acc num on line
         PACK  DATE(5),22(8,6)    Pack date
         MVC   FOUND+50(12),=XL12'402020206120206120202020'
         ED    FOUND+50(12),DATE  Put date on line
         CLC   10(1,6),=C'B'      Balance?
         BE    BALANCE            Go to balance
         LA    1,FOUND+41         Set place for $
         PACK  AMT(4),13(7,6)      Pack amount
         MVC   FOUND+36(11),=XL11'404020206B2021204B2020'
         EDMK  FOUND+36(11),AMT   Put amount on line
         MVI   0(1),C'$'          Insert $
         MVC   TAMT(4),28(8)      Set TAMT = Table(Amount)
         CLC   10(1,6),=C'W'      Withdraw?
         BE    WITHDRAW           Go to withdraw
         CLC   10(1,6),=C'D'      Deposit?
         BE    DEPOSIT            Go to deposit
*
WITHDRAW MVC   FOUND+18(13),=C'Withdrawal   ' Put type on line
         AP    TAMT,AMT           Add amount to table
         LA    1,FOUND+73         Set inital place for $
         CP    28(4,8),=P'0'      Pos?
         BE    WPOS
         B     WNEG
WPOS     MVC   FOUND+67(13),=XL13'4020206B2021204B2020404040'
         B     WMEET
WNEG     MVC   FOUND+67(13),=XL13'4020206B2021204B202040C3D9'
WMEET    EDMK  FOUND+67(13),28(8) Put balance in line
         BCTR  1,0                Decrement R1
         MVI   0(1),C'$'          Put $
         B     FFIN1
*
DEPOSIT  MVC   FOUND+18(13),=C'Deposit      ' Put type on line
         SP    28(4,8),AMT(4)
         LA    1,FOUND+73         Set inital place for $
         CP    28(4,8),=P'0'      Pos balance?
         BE    DPOS
         B     DNEG
DPOS     MVC   FOUND+67(13),=XL13'4020206B2021204B2020404040'
         B     DMEET
DNEG     MVC   FOUND+67(13),=XL13'4020206B2021204B202040C3D9'   
DMEET    EDMK  FOUND+67(13),28(8) Put balance in line
         BCTR  1,0                Decrement R1
         MVI   0(1),C'$'          Put $
         B     FFIN1
*
BALANCE  MVC   FOUND+18(13),=C'Balance Query'
         LA    1,FOUND+73         Set initial place for $
         CP    28(4,8),=P'0'      Pos balance?
         MVC   FOUND+36(11),=11C' '
         BE    BPOS               Go to pos
         B     BNEG               Else: Go to neg
BPOS     MVC   FOUND+67(13),=XL13'4020206B2021204B2020404040'
         B     BMEET
BNEG     MVC   FOUND+67(13),=XL13'4020206B2021204B202040C3D9'
BMEET    EDMK  FOUND+67(13),28(8) Put balance in line
         BCTR  1,0                Decrement R1
         MVI   0(1),C'$'          Insert $
         B     FFIN
*
FFIN1    MVC   28(4,8),TAMT       Fill table back in
FFIN     XPRNT FOUND,80           Print found line
         B     TLOOP              Do next line
*
*
*
NINTABLE MVC   NFOUND+12(8),0(6)  Put Acc num on line
         PACK  DATE(5),22(8,6)      Pack date
         MVC   NFOUND+68(12),=XL12'402020206120206120202020'
         ED    NFOUND+68(12),DATE Put date in
         CLC   10(1,6),=C'B'      Balance?
         BE    NFBALN             Go to NFBALN
         LA    1,NFOUND+59        Default place for $
         PACK  AMT(4),13(7,6)     Put Amount into AMT
         MVC   NFOUND+55(10),=XL10'4020206B2021204B2020'
         EDMK  NFOUND+55(10),AMT  Put amount in line
         BCTR  1,0                Decrement R1
         MVI   0(1),C'$'         Insert $
         CLC   10(1,6),=C'W'      Withdraw?
         BE    NFWITH             Go to NFWITH
         CLC   10(1,6),=C'D'      Deposit?
         BE    NFDEPO             Go to NFDEPO
*
NFWITH   MVC   NFOUND+41(13),=CL13'Withdrawal   '
         B     NIFIN
*
NFDEPO   MVC   NFOUND+41(13),=CL13'Deposit      '
         B     NIFIN
*
NFBALN   MVC   NFOUND+41(13),=CL13'Balance Query'
         MVC   NFOUND+55(10),=CL10'             '
         B     NIFIN
*
NIFIN    XPRNT NFOUND,80          Print not found line
         B     TLOOP              Do next line
*
ENDTLOOP L     13,4(0,13)         Load register list
         LM    14,12,12(13)       Reload registers
         BR    14
         LTORG
TRANSV   DS    18F
DATE     DS    PL5                Variable to hold date
AMT      DS    PL4                Variable to hold amount
TAMT     DS    PL4                Variable to hold amount in table
TEMPT    DS    XL7
FOUND    DC    CL1'0'             Found line - 80
         DC    CL4'    '
         DC    CL8'        '      Acc Num 5
         DC    CL5'     '
         DS    13C                Trans type 18
         DC    CL5'     '
         DS    11C                Amount 36
         DC    CL3'   '
         DS    12C                Date 51
         DC    CL5'     '
         DS    13C                New balance 67
NFOUND   DC    C'0'               Not found line - 80
         DC    CL11'Error!  ID '
         DS    8C                 Acc num 12
         DC    CL21' was not found for a '
         DS    13C                Trans type 41
         DC    C' '
         DS    10C                Amount 55         
         DC    CL3' on'
         DS    18C                Date 68
         SPACE
         SPACE
         SPACE
         END
//FT05F001  DD  DSN=KC02314.SPRING17.CSCI360.HW6DATA,DISP=SHR
