//KC03I36A JOB ,'Tommy Franczak',MSGCLASS=H
//STEP1 EXEC PGM=ASSIST
//STEPLIB DD DSN=KC02293.ASSIST.LOADLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
********************************************
* Assignment 5 - Pair Programmed
* Names: Tommy Franczak, Matt Rycraft
*
* Function: 
* 
* MAIN
* Register Usage
*
*  1     Parameter List
* 12     Base register
* 13     Main save
* 14     Return Address
********************************************
MAIN     CSECT
         STM   14,12,12(13)       Copy registers
         LR    12,15              Load 12 as base register
         USING MAIN,12            Use 12 as base register
         LA    14,MAINSAVE        Load MAINSAVE into R14
         ST    13,4(,14)          Link forward pointer
         ST    14,8(,13)          Link backward pointer
         LR    13,14              Load MAINSAVE
         SPACE
         LA    1,PLIST            Load PLIST into 1
         L     15,=V(BUILD)       Load virtual address of BUILD
         BALR  14,15              Do BUILD subroutine
         XDUMP TABLE,1280
         SPACE
         LA    1,PLIST            Load PLIST into 1
         L     15,=V(PRINT)       Load virtual address of PRINT
         BALR  14,15              Do PRINT subroutine
         SPACE
         L     13,4(0,13)         Load backward pointer
         LM    14,12,12(13)       Load registers back
         BR    14
         LTORG                    Literal origin
         ORG MAIN+((*-MAIN+31)/32)*32
TABLE    DS    40CL32             Declare Entry Table
EOT      DS    F                  Declare End of Table
CAPTION  DC    C'1'               Caption for PRINT - 80
         DC    22C' '
         DC    C'Odds and Ends Customer Data'
         DC    22C' '
         DC    C'Page    '
PAGENUM  DC    PL2'1'             Declares pagenum
BUFFER   DS    80C                Declare Buffer
         DC    C'*'               End for XDECI
PLIST    DC    A(TABLE)           Parameter list
         DC    A(EOT)
         DC    A(BUFFER)
         DC    A(CAPTION)
MAINSAVE DS    18F
ENTRY    DSECT                    Dummy section for table
FNAME    DS    CL10               First name = 10 characters
LNAME    DS    CL10               Last name = 10 characters
IDNUM    DS    CL8                ID Number = 8 characters
ACCBAL   DS    PL4                Account Bal = 4 packed nums
********************************************
* Build Subroutine
*
* Function: Reads in numbers from an 
* unknown file and builds a table of  
* 40 fullwords. Firstname(10 characters),
* Lastname(10 characters), ID Num (8 characters)
* Account Balance (4 Characters)
* 
* Register Usage
*
*  4     Table Pointer
*  5     EOT Pointer
*  8     Address of Outline variables
*  9     Address of buffer
* 12     Base register
* 13     Address of BUILDSV (save area)
* 14     Return Address
********************************************
BUILD    CSECT       
         STM   14,12,12(13)       Save registers
         LR    12,15              Load 12 as Base Register
         USING BUILD,12           Use 12 as Base Register 
         LA    14,BUILDSV         Load PRINTSV into 14
         ST    14,8(0,14)         Link backward pointer
         ST    13,4(0,14)         Link forward pointer
         LR    13,14              Load BUILDSV
         USING ENTRY,4
         LM    4,5,0(1)           Unload parameters
         L     9,8(1)             Load address of buffer
BLOOP1   XREAD 0(0,9),80          Read line into buffer
         CLC   0(8,9),=CL8'DONOTPUT' At delimiter?
         BE    ENDBLP1            End loop
         MVC   LNAME(10),0(9)     Grab LNAME from buffer
         MVC   FNAME(10),12(9)    Grab FNAME from buffer
         MVC   IDNUM(8),24(9)     Grab IDNAME from buffer
         PACK  ACCBAL(4),34(7,9)  Grab ACCBAL from buffer
         CLC   41(1,9),=C'+'      + number on line?
         BE    POS                Go to pos
         MP    ACCBAL,=P'-1'      Negate number in table
POS      LA    4,32(0,4)          Increment table pointer
         B     BLOOP1             Back to BLOOP1
ENDBLP1  ST    4,0(5)             Store end of table
         L     13,4(0,13)         Load register list
         LM    14,12,12(13)       Reload registers
         BR    14                 Branch back to MAIN
         LTORG
BUILDSV  DS    18F                Subroutine save
         SPACE
         SPACE
         SPACE
********************************************
* Print Subroutine
*
* Function: Print the table.
* 
* Register Usage
*
*  1     Address of $
*  4     Table Pointer
*  5     EOT Pointer
*  6     Address of CAPTION
*  7     Address of pagecount
*  8     Address of Outline variables
*  9     Counter variable
* 12     Base register
* 13     Address of PRINTSV (save area)  
* 14     Return Address
********************************************
PRINT    CSECT 
         STM   14,12,12(13)       Save registers
         LR    12,15              Load 12 as Base Register
         USING PRINT,12           Use 12 as Base Register 
         LA    14,PRINTSV         Load PRINTSV into 14
         ST    14,8(0,14)         Link backward pointer
         ST    13,4(0,14)         Link forward pointer
         LR    13,14              Load SEARCHSV
         USING ENTRY,4
         LM    4,7,0(1)           Unload parameters
PLOOP1   MVC   78(2,6),0(7)       Append proper page num
         XPRNT 0(7),80            Print CAPTION line
         XPRNT HEADER,76          Print HEADER line
         SR    9,9                Zero loop counter
*
PLOOP2   MVI   LINE+1,C' '        Clear LINE
         MVC   LINE+1(78),LINE+1  Clear LINE
         C     4,0(0,5)           EOT = Table Ptr?
         BE    ENDPLOOP           Go to ENDPLOOP
         MVC   FNAME1(10),FNAME   Put FNAME on line
         MVC   LNAME1(10),LNAME   Put LNAME on line
         MVC   IDNUM1(8),IDNUM     Put IDNUM on line
         LA    1,ACCBAL1+4        Set default place for $
         CP    ACCBAL,=P'0'   Is bal >= 0?
         BC    B'1010',BALPOS     Skip to BALPOS
         MVC   ACCBAL1(12),=X'4020202021204B202040C3D9'
         B     ENDN               Merge back with pos
BALPOS   MVC   ACCBAL1(12),=X'4020202021204B2020404040'
ENDN     EDMK  ACCBAL1(12),ACCBAL Put ACCBAL on line
         MVI   0(1),C'$'          Add $ to line
         XPRNT LINE,79            Print the line
         A     4,=F'32'           Increment table pointer
         A     9,=F'1'            Increment Loop counter
         C     9,=F'5'            5 not printed?
         BNE   PLOOP2             Print another
         B     PLOOP1             Reprint header.
*
ENDPLOOP L     13,4(0,13)         Load register list
         LM    14,12,12(13)       Reload registers
         BR    14                 Branch back to MAIN
         LTORG
HEADER   DC    C'-'               Format for header line - 76
         DC    C'First Name'
         DC    11C' '
         DC    C'Last Name'
         DC    13C' '
         DC    C'ID Number'
         DC    16C' '
         DC    C'Balance'
LINE     DC    C'0'               Declare print line - 79
FNAME1   DS    10C
         DC    11C' '
LNAME1   DS    10C
         DC    12C' '         
IDNUM1   DS    8C
         DC    15C' '
ACCBAL1  DS    12C
PRINTSV  DS    18F                Create register save area
         SPACE
         SPACE
         SPACE
********************************************
* Trans Subroutine
*
* Function: 
* 
* Register Usage
*
*  4     Table Pointer
*  5     EOT Pointer
*  6     Value in table
*  7     Division
*  8     Address of Outline variables
*  9     Counter variable
* 12     Base register
* 13     Address of PRINTSV (save area)  
* 14     Return Address
********************************************
         END
//FT05F001  DD  DSN=KC02314.SPRING17.CSCI360.HW6DATA,DISP=SHR
